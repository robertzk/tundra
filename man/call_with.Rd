% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.r
\name{call_with}
\alias{call_with}
\title{Evaluate a function while injecting some locals.}
\usage{
call_with(fn, args, with)
}
\arguments{
\item{fn}{function.}

\item{args}{list. The arguments to call the \code{fn} with.}

\item{with}{list or environment. Additional locals to make available
during the call.}
}
\value{
The result of calling \code{fn} with the injection provided
   by the \code{with} parameter.
}
\description{
Instead of modifying a closure's parent environment directly,
sometimes it may be desirable to do a one-time injection that
overrides what would normally be accessible through the closure.
\code{call_with} allows this by extending the usual \code{do.call}
to a third argument that is a list or environment temporarily
injected during the course of the call.
}
\examples{
\dontrun{
fn <- local({ x <- 1; function(y) { x + y } })
stopifnot(fn(1) == 2)
stopifnot(call_with(fn, list(1), list(x = 2)) == 3)
}
}

